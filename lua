do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v72=0;while true do if (v72==0) then v19=v0(v3(v30,1,1));return "";end end else local v73=0;local v74;while true do if (v73==0) then v74=v2(v0(v30,16));if v19 then local v102=v5(v74,v19);v19=nil;return v102;else return v74;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v75=0 -(0 + 0) ;local v76;while true do if (v75==0) then v76=(v31/((1 + 1)^(v32-(2 -1))))%((1639 -(1523 + 114))^(((v33-(1 -0)) -(v32-(1 -(957 -(892 + 65))))) + (2 -1))) ;return v76-(v76%((138 + 482) -(555 + 64))) ;end end else local v77=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v77 + v77))>=v77) and ((9 -5) -3)) or (927 -((395 -181) + 713)) ;end end local function v21()local v34=0;local v35;while true do if (v34==(1 -(0 -0))) then return v35;end if (v34==(350 -(87 + 263))) then v35=v1(v16,v18,v18);v18=v18 + (181 -(67 + 113)) ;v34=1 + 0 ;end end end local function v22()local v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 2 ;return (v37 * (1017 -761)) + v36 ;end local function v23()local v38=952 -(802 + 150) ;local v39;local v40;local v41;local v42;while true do if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (6 -2) ;v38=1;end if (v38==((1 -0) + 0)) then return (v42 * (16778213 -((2102 -(1069 + 118)) + (185 -103)))) + (v41 * (185570 -120034)) + (v40 * (150 + 106)) + v39 ;end end end local function v24()local v43=0 -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(1 + 2)) then if (v48==(0 + 0)) then if (v47==0) then return v49 * (0 -0) ;else local v103=0 + 0 ;while true do if (v103==(791 -(368 + (2240 -(1703 + 114))))) then v48=3 -(703 -(376 + 325)) ;v46=18 -(10 + 8) ;break;end end end elseif (v48==(7874 -5827)) then return ((v47==(442 -(416 + (58 -32)))) and (v49 * ((3 -2)/(0 + 0)))) or (v49 * NaN) ;end return v8(v49,v48-(1809 -786) ) * (v46 + (v47/((1 + 1)^(490 -(145 + (1706 -(447 + 966))))))) ;end if (v43==1) then v46=431 -(44 + 386) ;v47=(v20(v45,1487 -(998 + 488) ,7 + 13 ) * ((2 + 0)^((1317 -513) -(201 + 571)))) + v44 ;v43=1140 -((356 -240) + 1022) ;end if (v43==2) then v48=v20(v45,(238 -151) -66 ,121 -90 );v49=((v20(v45,19 + 13 )==(3 -(1 + 1))) and  -1) or (1056 -(87 + 968)) ;v43=3;end if (v43==(0 -(0 -0))) then v44=v23();v45=v23();v43=860 -(814 + 45) ;end end end local function v25(v50)local v51;if  not v50 then local v78=0;while true do if (v78==((53 -39) -(9 + 5))) then v50=v23();if (v50==(376 -(85 + 291))) then return "";end break;end end end v51=v3(v16,v18,(v18 + v50) -1 );v18=v18 + v50 ;local v52={};for v70=1266 -(243 + 1022) , #v51 do v52[v70]=v2(v1(v3(v51,v70,v70)));end return v6(v52);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (1~=v53) then else v56=nil;v57=nil;v53=2;end if (v53~=(5 -3)) then else v58=nil;v59=nil;v53=3;end if (v53~=4) then else v62=nil;while true do if (1~=v54) then else local v99=0;while true do if (v99==0) then v57=nil;v58=nil;v99=1;end if (1~=v99) then else v54=2;break;end end end if (v54==2) then local v100=0 -0 ;while true do if (v100~=0) then else v59=nil;v60=nil;v100=1;end if (v100==1) then v54=3;break;end end end if (v54~=(10 -6)) then else while true do if (v55==(583 -(361 + 219))) then v62=nil;while true do local v113=0;local v114;local v115;while true do if (v113~=(321 -(53 + 267))) then else while true do if ((0 + 0)~=v114) then else v115=413 -(15 + 398) ;while true do if (v115~=0) then else local v194=982 -(18 + 964) ;while true do if (v194~=1) then else v115=3 -2 ;break;end if (v194==0) then if (v56~=(1 + 0)) then else local v216=0 + 0 ;local v217;while true do if (v216==0) then v217=850 -(20 + 830) ;while true do if (v217==(2 + 0)) then v56=2;break;end if ((126 -(116 + 10))~=v217) then else local v226=0 + 0 ;local v227;while true do if (v226==0) then v227=0;while true do if (v227==(738 -(542 + 196))) then local v236=0 -0 ;while true do if (v236~=1) then else v227=1;break;end if (v236==(0 + 0)) then v61=v23();v62={};v236=1;end end end if (v227==(1 + 0)) then v217=1 + 0 ;break;end end break;end end end if ((2 -1)==v217) then local v228=0 -0 ;while true do if (v228==0) then for v230=1,v61 do local v231=1551 -(1126 + 425) ;local v232;local v233;local v234;local v235;while true do if (v231==(407 -(118 + 287))) then while true do if (v232~=1) then else v235=nil;while true do if (v233==(0 -0)) then local v244=1121 -(118 + 1003) ;local v245;local v246;while true do if ((0 -0)~=v244) then else v245=0;v246=nil;v244=378 -(142 + 235) ;end if (v244~=(4 -3)) then else while true do if ((0 + 0)==v245) then v246=0;while true do if ((978 -(553 + 424))~=v246) then else v233=1;break;end if (v246==(0 -0)) then v234=v21();v235=nil;v246=1;end end break;end end break;end end end if (v233~=1) then else if (v234==1) then v235=v21()~=0 ;elseif (v234==(2 + 0)) then v235=v24();elseif (v234==(3 + 0)) then v235=v25();end v62[v230]=v235;break;end end break;end if (v232==(0 + 0)) then local v238=0;while true do if (v238==(1 + 0)) then v232=1;break;end if (v238==0) then v233=0;v234=nil;v238=1;end end end end break;end if (v231==0) then v232=0;v233=nil;v231=1 + 0 ;end if (v231==1) then v234=nil;v235=nil;v231=2;end end end v60[3]=v21();v228=2 -1 ;end if (v228==(2 -1)) then v217=2;break;end end end end break;end end end if (2~=v56) then else local v218=0;local v219;while true do if (0==v218) then v219=0 -0 ;while true do local v224=0 + 0 ;local v225;while true do if (v224==0) then v225=0 -0 ;while true do if (v225==0) then if (v219~=(754 -(239 + 514))) then else return v60;end if (v219==0) then local v237=0 + 0 ;while true do if (v237==0) then for v239=1330 -(797 + 532) ,v23() do local v240=0 + 0 ;local v241;while true do if (v240==(0 + 0)) then v241=v21();if (v20(v241,2 -1 ,1)==(1202 -(373 + 829))) then local v248=731 -(476 + 255) ;local v249;local v250;local v251;local v252;while true do if (v248==(1131 -(369 + 761))) then v251=nil;v252=nil;v248=2 + 0 ;end if ((2 -0)==v248) then while true do if (v249==(1 -0)) then local v254=238 -(64 + 174) ;while true do if (v254~=(1 + 0)) then else v249=2 -0 ;break;end if (v254==(336 -(144 + 192))) then v252={v22(),v22(),nil,nil};if (v250==(1504 -(363 + 1141))) then local v264=1580 -(1183 + 397) ;local v265;local v266;while true do if (v264==1) then while true do if (v265==(0 -0)) then v266=0 + 0 ;while true do if (v266==0) then v252[3]=v22();v252[3 + 1 ]=v22();break;end end break;end end break;end if (v264==(1975 -(1913 + 62))) then v265=0 + 0 ;v266=nil;v264=1;end end elseif (v250==(2 -1)) then v252[1936 -(565 + 1368) ]=v23();elseif (v250==2) then v252[3]=v23() -((7 -5)^16) ;elseif (v250==3) then local v269=0;local v270;local v271;while true do if (v269==(1661 -(1477 + 184))) then local v274=0 -0 ;while true do if (v274~=(0 + 0)) then else v270=0;v271=nil;v274=857 -(564 + 292) ;end if (v274==1) then v269=1;break;end end end if (v269~=1) then else while true do if (v270==(0 -0)) then v271=0;while true do if (v271~=(0 -0)) then else v252[307 -(244 + 60) ]=v23() -(2^(13 + 3)) ;v252[4]=v22();break;end end break;end end break;end end end v254=1;end end end if (v249~=(478 -(41 + 435))) then else if (v20(v251,1002 -(938 + 63) ,1 + 0 )==1) then v252[1127 -(936 + 189) ]=v62[v252[2]];end if (v20(v251,2,1 + 1 )~=1) then else v252[3]=v62[v252[1616 -(1565 + 48) ]];end v249=3;end if ((2 + 1)==v249) then if (v20(v251,1141 -(782 + 356) ,3)==1) then v252[271 -(176 + 91) ]=v62[v252[4]];end v57[v239]=v252;break;end if ((0 -0)~=v249) then else local v256=0 -0 ;local v257;while true do if (v256==0) then v257=1092 -(975 + 117) ;while true do if (v257==(1876 -(157 + 1718))) then v249=1;break;end if (v257==(0 + 0)) then v250=v20(v241,2,10 -7 );v251=v20(v241,13 -9 ,6);v257=1019 -(697 + 321) ;end end break;end end end end break;end if ((0 -0)==v248) then local v253=0;while true do if (v253==(1 -0)) then v248=2 -1 ;break;end if ((0 + 0)==v253) then v249=0 -0 ;v250=nil;v253=2 -1 ;end end end end end break;end end end for v242=1,v23() do v58[v242-1 ]=v28();end v237=1;end if (v237==(1228 -(322 + 905))) then v219=612 -(602 + 9) ;break;end end end break;end end break;end end end break;end end end v194=1190 -(449 + 740) ;end end end if (v115==(873 -(826 + 46))) then if (v56==(947 -(245 + 702))) then local v213=0;while true do if (v213~=(3 -2)) then else local v220=0;while true do if (0==v220) then local v223=0 + 0 ;while true do if (v223~=1) then else v220=1;break;end if ((1898 -(260 + 1638))==v223) then v59={};v60={v57,v58,nil,v59};v223=1;end end end if (v220~=(1 + 0)) then else v213=2;break;end end end if (v213==0) then local v221=0 -0 ;local v222;while true do if (0==v221) then v222=0 -0 ;while true do if (v222~=(1206 -(902 + 303))) then else v213=1 -0 ;break;end if (v222~=0) then else v57={};v58={};v222=1;end end break;end end end if (v213==(4 -2)) then v56=1 + 0 ;break;end end end break;end end break;end end break;end if (v113==(1690 -(1121 + 569))) then v114=0;v115=nil;v113=1;end end end break;end if (v55==(215 -(22 + 192))) then local v108=683 -(483 + 200) ;local v109;while true do if (v108~=(1463 -(1404 + 59))) then else v109=0;while true do if (v109~=1) then else v55=2;break;end if (v109==(0 -0)) then v58=nil;v59=nil;v109=1 -0 ;end end break;end end end if (v55~=(765 -(468 + 297))) then else local v110=562 -(334 + 228) ;while true do if (v110==1) then v55=1;break;end if (v110==0) then v56=0 -0 ;v57=nil;v110=2 -1 ;end end end if (v55==(2 -0)) then local v111=0 + 0 ;local v112;while true do if ((236 -(141 + 95))==v111) then v112=0;while true do if (v112==(1 + 0)) then v55=7 -4 ;break;end if (v112==0) then local v116=0 -0 ;while true do if (0~=v116) then else v60=nil;v61=nil;v116=1;end if (v116==(1 + 0)) then v112=1;break;end end end end break;end end end end break;end if (v54==(0 -0)) then local v101=0 + 0 ;while true do if (v101==(1 + 0)) then v54=1;break;end if (v101==0) then v55=0;v56=nil;v101=1 -0 ;end end end if (v54~=3) then else v61=nil;v62=nil;v54=3 + 1 ;end end break;end if (v53==0) then v54=163 -(92 + 71) ;v55=nil;v53=1 + 0 ;end if (v53==3) then v60=nil;v61=nil;v53=4;end end end local function v29(v63,v64,v65)local v66=0;local v67;local v68;local v69;while true do if (v66==1) then v69=v63[3];return function(...)local v82=v67;local v83=v68;local v84=v69;local v85=v27;local v86=1;local v87= -1;local v88={};local v89={...};local v90=v12("#",...) -1 ;local v91={};local v92={};for v96=0,v90 do if (v96>=v84) then v88[v96-v84 ]=v89[v96 + 1 ];else v92[v96]=v89[v96 + 1 ];end end local v93=(v90-v84) + 1 ;local v94;local v95;while true do v94=v82[v86];v95=v94[1];if (v95<=22) then if (v95<=10) then if (v95<=4) then if (v95<=1) then if (v95>0) then v92[v94[2]]();elseif (v92[v94[2]]==v92[v94[4]]) then v86=v86 + 1 ;else v86=v94[3];end elseif (v95<=2) then if (v94[2]==v92[v94[4]]) then v86=v86 + 1 ;else v86=v94[3];end elseif (v95==3) then local v148=0;local v149;while true do if (v148==0) then v149=v94[2];v92[v149]=v92[v149](v13(v92,v149 + 1 ,v87));break;end end else v65[v94[3]]=v92[v94[2]];end elseif (v95<=7) then if (v95<=5) then v65[v94[3]]=v92[v94[2]];elseif (v95>6) then if  not v92[v94[2]] then v86=v86 + 1 ;else v86=v94[3];end else local v152=0;local v153;local v154;while true do if (v152==0) then v153=v94[2];v154=v92[v94[3]];v152=1;end if (v152==1) then v92[v153 + 1 ]=v154;v92[v153]=v154[v94[4]];break;end end end elseif (v95<=8) then v92[v94[2]]=v92[v94[3]][v94[4]];elseif (v95==9) then if (v92[v94[2]]==v94[4]) then v86=v86 + 1 ;else v86=v94[3];end else v92[v94[2]]();end elseif (v95<=16) then if (v95<=13) then if (v95<=11) then do return;end elseif (v95>12) then local v155=v94[2];v92[v155](v13(v92,v155 + 1 ,v94[3]));elseif  not v92[v94[2]] then v86=v86 + 1 ;else v86=v94[3];end elseif (v95<=14) then local v121=v94[2];v92[v121](v92[v121 + 1 ]);elseif (v95>15) then do return;end else local v156=0;local v157;while true do if (v156==0) then v157=v94[2];v92[v157]=v92[v157]();break;end end end elseif (v95<=19) then if (v95<=17) then if v92[v94[2]] then v86=v86 + 1 ;else v86=v94[3];end elseif (v95==18) then if (v92[v94[2]]==v92[v94[4]]) then v86=v86 + 1 ;else v86=v94[3];end else local v159=v94[2];v92[v159]=v92[v159](v92[v159 + 1 ]);end elseif (v95<=20) then local v122=0;local v123;local v124;local v125;local v126;while true do if (v122==2) then for v199=v123,v87 do local v200=0;while true do if (v200==0) then v126=v126 + 1 ;v92[v199]=v124[v126];break;end end end break;end if (v122==0) then v123=v94[2];v124,v125=v85(v92[v123](v13(v92,v123 + 1 ,v94[3])));v122=1;end if (v122==1) then v87=(v125 + v123) -1 ;v126=0;v122=2;end end elseif (v95==21) then v92[v94[2]]=v94[3];elseif (v92[v94[2]]~=v94[4]) then v86=v86 + 1 ;else v86=v94[3];end elseif (v95<=33) then if (v95<=27) then if (v95<=24) then if (v95>23) then local v127=v94[2];v92[v127]=v92[v127](v13(v92,v127 + 1 ,v87));elseif v92[v94[2]] then v86=v86 + 1 ;else v86=v94[3];end elseif (v95<=25) then if (v92[v94[2]]~=v94[4]) then v86=v86 + 1 ;else v86=v94[3];end elseif (v95>26) then local v165=v94[2];v92[v165](v13(v92,v165 + 1 ,v94[3]));else local v166=v94[2];v92[v166]=v92[v166]();end elseif (v95<=30) then if (v95<=28) then v92[v94[2]]=v94[3]~=0 ;elseif (v95==29) then if (v94[2]==v92[v94[4]]) then v86=v86 + 1 ;else v86=v94[3];end else v92[v94[2]]=v94[3];end elseif (v95<=31) then local v130=0;local v131;local v132;while true do if (v130==0) then v131=v94[2];v132=v92[v94[3]];v130=1;end if (v130==1) then v92[v131 + 1 ]=v132;v92[v131]=v132[v94[4]];break;end end elseif (v95>32) then v86=v94[3];else for v187=v94[2],v94[3] do v92[v187]=nil;end end elseif (v95<=39) then if (v95<=36) then if (v95<=34) then local v133=v94[2];local v134,v135=v85(v92[v133](v13(v92,v133 + 1 ,v94[3])));v87=(v135 + v133) -1 ;local v136=0;for v143=v133,v87 do v136=v136 + 1 ;v92[v143]=v134[v136];end elseif (v95>35) then v92[v94[2]]=v65[v94[3]];else for v189=v94[2],v94[3] do v92[v189]=nil;end end elseif (v95<=37) then local v137=0;local v138;while true do if (v137==0) then v138=v94[2];v92[v138]=v92[v138](v13(v92,v138 + 1 ,v94[3]));break;end end elseif (v95>38) then v92[v94[2]]=v94[3]~=0 ;else local v174=v94[2];v92[v174]=v92[v174](v13(v92,v174 + 1 ,v94[3]));end elseif (v95<=42) then if (v95<=40) then local v139=0;local v140;while true do if (0==v139) then v140=v94[2];v92[v140](v92[v140 + 1 ]);break;end end elseif (v95>41) then v92[v94[2]]=v92[v94[3]][v94[4]];elseif (v92[v94[2]]==v94[4]) then v86=v86 + 1 ;else v86=v94[3];end elseif (v95<=43) then local v141=v94[2];v92[v141]=v92[v141](v92[v141 + 1 ]);elseif (v95>44) then v86=v94[3];else v92[v94[2]]=v65[v94[3]];end v86=v86 + 1 ;end end;end if (v66==0) then v67=v63[1];v68=v63[2];v66=1;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
